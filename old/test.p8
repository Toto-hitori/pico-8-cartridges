pico-8 cartridge // http://www.pico-8.com
version 33
__lua__
--main logic
function _init()
 make_player()
 make_rope()
end
function _update()
	if(p.ropes)then
		
		
		--rope = false
		end
	if(p.hanging)then
		p.py = rope.y1-5
	
	end
 move_player()
 apply_gravity()
	
end
function _draw()
 cls() --clear screen
 
 map(0,0)
 draw_player()
 if(p.ropes) throw_rope()
 print(p.dx)
end


-->8
--player
function make_player()
 p = {
 	dx = 0,
 	dy = 0,
 	grounded = false,
 	px=10,
 	py=70,
 	pspr=1,
 	dashbool = true,
 	ropes = false,
 	hanging = false,
 	
 }
end

function apply_gravity()
	if(p.py < 89 and p.dy < 3) then
		p.dy +=0.4 --gravity
		end
	if(p.py > 88)then
	 p.grounded = true
		p.dashbool = true
	 p.py = 89
		p.speedy = 0
	 end
end

function move_player()
 if (btn(0))then
  walk(0)--left
 elseif (btn(1)) then
 	walk(1)--right 
 elseif(p.grounded)then
	 p.dx  = 0 
 end
 if (btn(2)) jump() --up
 if (btn(3) and rope.length >0) then
 	rope.length -= 1
 	end
 if (btn(5))then
  p.ropes = true
  
 else
 	rope.collided = false
 	p.ropes = false
 	if(p.hanging)then
 		p.hanging = false
 		p.dx += rope.speed
 		--player.speedy +=2
 		rope.speed = 0
 	end
 	rope.length = 28
 	
 end

	p.py += p.dy
 p.px += p.dx
end

function walk(dir)
	if(dir ==0) then
		if(p.dx>-3)then
		 p.dx -=1
		end
	else 
		if(p.dx < 3)then
			p.dx +=1
		end
	end
end	
	
function dash()
	if(p.dashbool and p.airborn)
	then
		p.dashbool = false
		if(p.dx > 0) then
			p.dx += 20
			p.dy += 10
		else
			p.dx -= 20
			p.dy += 10
		end
	end
end

function jump()
	if(p.grounded) then 
		p.dy -=4
		p.grounded = false
end
end

function draw_player()
 spr(p.pspr,p.px,p.py)
end

function c0llision()
	local x1 = p.px/8 local x2 = (p.px +7)/8
	local y1 = p.py/8 local y2 = (p.py+8)/8
	if fget(mget(x1,y1),0)
	or fget(mget(x1,y2),0)
	or fget(mget(x2,y1),0)
	or fget(mget(x2,y2),0)
	then 
		return true
	end
end
-->8
--rope
function make_rope()
	rope ={
		x1 = 0,
		y1 = 0,
		x2 = 0,
		y2 = 0,
		max_length = 28,
		length = 28,
		angle = 0.8,
		collided = false,
		speed = 0
		}
end

function throw_rope()
		compute_end()
		line(rope.x1,rope.y1,rope.x2,rope.y2)
end

function compute_end()
		rope.x1 = p.px+4
		rope.y1 = p.py+4
		
		local endy = rope.y1-(sin(rope.angle)*rope.length)
		local endx = cos(rope.angle)*rope.length+rope.x1
		if(fget(mget(endx/8,endy/8),0) and not rope.collided)then
			rope.y2 = endy
			tan = sin(rope.angle)/cos(rope.angle)
			rope.x2 = rope.x1+rope.x2/tan
			rope.collided = true
		elseif(not rope.collided)then
			rope.x2 = endx 
			rope.y2 = endy
	else
		local y_length = (rope.y2 - rope.y1)
		local x_length =(rope.x2 - rope.x1)
		if(sqrt(y_length^2+x_length^2)>rope.length) then
			rope.y1 =rope.y2+(sqrt(rope.length^2-x_length^2))
			p.hanging = true
			p.dx *=1.02
		else
			p.hanging = false
		end
	end
	if(rope.speed <= 1.5)then
		rope.speed += 0.1
		end
end
__gfx__
00000000022222000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000222fdf000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700222fff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000211ff1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000011111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700511110500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555055500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333003333333333330044444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
bbbbbbbb033bbbbbbbbbb33044444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33bb333333bbb333bbb3bb3045445444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
343333433bb334443334333344444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
444444443b3444544444445544444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
45444454534444444444444544444454000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44444444544544444445444554454444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44445444544444444444444544444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000010001010001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1110101010101010101010101010101200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1313131313131313131313131313131300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1313131313131313131313131313131300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
